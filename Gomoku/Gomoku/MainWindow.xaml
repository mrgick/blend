<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Gomoku"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="Gomoku.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1280" ResizeMode="CanMinimize">
    <Window.Resources>
        <Style x:Key="FieldButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FDDD06"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="1"
                                BorderBrush="Black"
                                Margin="0">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyleCustom" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="Center" Margin="1,1,2,1" VerticalAlignment="Center">
                                <Grid x:Name="markGrid" Margin="5">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="30" MinHeight="30" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Storyboard_TextBlock">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:02" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:03" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="blurGrid" Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardFigures" RepeatBehavior="Forever" SpeedRatio="0.5">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="36"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:04" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="36"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:04" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="36"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:04" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="36"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:04" Value="36">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="backrect" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:01" Value="645,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:02" Value="645,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:03" Value="0,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:04" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="backrect" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="White"/>
                <EasingColorKeyFrame KeyTime="00:00:01" Value="#FFED523E"/>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF3EED98"/>
                <EasingColorKeyFrame KeyTime="00:00:03" Value="#FF553EED"/>
                <EasingColorKeyFrame KeyTime="00:00:04" Value="#FF3EED98"/>
            </ColorAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="backrect2" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="640,664,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:01" Value="0,664,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:02" Value="0,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:03" Value="645,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:04" Value="640,664,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="backrect2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="White"/>
                <EasingColorKeyFrame KeyTime="00:00:01" Value="#FFED523E"/>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF3EED98"/>
                <EasingColorKeyFrame KeyTime="00:00:03" Value="#FF553EED"/>
                <EasingColorKeyFrame KeyTime="00:00:04" Value="#FFFFFFFF"/>
            </ColorAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="backrect3" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:01" Value="0,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:02" Value="645,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:03" Value="645,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:04" Value="0,665,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="backrect3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="#FFFFFFFF"/>
                <EasingColorKeyFrame KeyTime="00:00:01" Value="#FFED523E"/>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF3EED98"/>
                <EasingColorKeyFrame KeyTime="00:00:03" Value="#FF553EED"/>
                <EasingColorKeyFrame KeyTime="00:00:04" Value="#FFFFFFFF"/>
            </ColorAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="backrect4" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="645,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:01" Value="645,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:02" Value="0,665,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:03" Value="0,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:04" Value="645,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="backrect4" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="White"/>
                <EasingColorKeyFrame KeyTime="00:00:01" Value="#FFED523E"/>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF3EED98"/>
                <EasingColorKeyFrame KeyTime="00:00:03" Value="#FF553EED"/>
                <EasingColorKeyFrame KeyTime="00:00:04" Value="#FFFFFFFF"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{DynamicResource StoryboardFigures}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Grid>
        <Grid x:Name="blurGrid">
            <Grid.Effect>
                <BlurEffect Radius="0" />
            </Grid.Effect>
            <Image HorizontalAlignment="Left" Height="724" VerticalAlignment="Top" Width="1298" Source="/wall.jpg"/>
            <Grid HorizontalAlignment="Left" Height="900" Margin="562,-96,0,0" VerticalAlignment="Top" Width="824">
                <Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="250" Margin="584,650,0,0" Stroke="White" VerticalAlignment="Top" Width="240" StrokeThickness="36"/>
                <Ellipse x:Name="ellipse2" HorizontalAlignment="Left" Height="250" Margin="0,650,0,0" Stroke="White" VerticalAlignment="Top" Width="240" StrokeThickness="36"/>
                <Ellipse x:Name="ellipse3" HorizontalAlignment="Left" Height="250" Stroke="White" VerticalAlignment="Top" Width="240" StrokeThickness="36"/>
                <Ellipse x:Name="ellipse4" HorizontalAlignment="Left" Height="250" Margin="584,0,0,0" Stroke="White" VerticalAlignment="Top" Width="240" StrokeThickness="36"/>
            </Grid>
            <Rectangle x:Name="backrect" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="40" RenderTransformOrigin="0.5,0.426" Fill="White" Margin="0,0,0,0"/>
            <Rectangle x:Name="backrect2" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="40" RenderTransformOrigin="0.5,0.426" Fill="White" Margin="640,664,0,0"/>
            <Rectangle x:Name="backrect3" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="40" RenderTransformOrigin="0.5,0.426" Fill="White" Margin="0,665,0,0">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="backrect4" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="40" RenderTransformOrigin="0.5,0.426" Fill="White" Margin="645,0,0,0"/>
            <Rectangle HorizontalAlignment="Left" Height="660" Margin="10,0,0,0" Stroke="Black" VerticalAlignment="Center" Width="660" StrokeThickness="5"/>
            <Grid x:Name="fieldGrid" HorizontalAlignment="Left" Height="650" Margin="15,0,0,0" VerticalAlignment="Center" Width="650"/>
            <Rectangle HorizontalAlignment="Left" Height="660" Margin="680,0,0,0" Stroke="Black" VerticalAlignment="Center" Width="575" StrokeThickness="5"/>
            <TextBlock x:Name="text1" HorizontalAlignment="Left" Height="160" Margin="722,69,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="500" FontSize="110" FontWeight="Bold" FontStyle="Italic" Background="#FF191919" Foreground="White" Text=" Gomoku"/>
            <Button x:Name="BtnNewGame" HorizontalAlignment="Left" Height="125" VerticalAlignment="Top" Width="500" Click="NewGame" Background="{x:Null}" Margin="718,284,0,0" Foreground="Black" FontSize="90" FontStyle="Italic" BorderBrush="{x:Null}" Content="New Game" FontWeight="Bold">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{x:Null}" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontWeight" Value="Light" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FF191919" TargetName="Border" />
                                            <Setter Property="TextElement.Foreground" Value="White" TargetName="contentPresenter"/>
                                            <Setter Property="TextElement.FontWeight" Value="Bold" TargetName="contentPresenter"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock x:Name="text1_Copy" HorizontalAlignment="Left" Height="113" Margin="766,436,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="404" FontSize="80" FontWeight="Bold" FontStyle="Italic" Foreground="Black" Text=" Difficulty" TextDecorations="Underline"/>
            <RadioButton x:Name="RadioButton1" Style="{DynamicResource RadioButtonStyleCustom}" Content="1" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.752,0.409" Margin="745,554,0,0" FontSize="80" IsChecked="True" Click="RadioButton1_Checked"/>
            <RadioButton x:Name="RadioButton2" Style="{DynamicResource RadioButtonStyleCustom}" Content="2" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.469,0.455" Margin="916,554,0,0" FontSize="80" Click="RadioButton2_Checked"/>
            <RadioButton x:Name="RadioButton3" Style="{DynamicResource RadioButtonStyleCustom}" Content="3" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.5,0.5" Margin="1090,554,0,0" FontSize="80" Click="RadioButton3_Checked"/>
        </Grid>
        <Grid x:Name="textGrid" Visibility="Hidden">
            <Rectangle HorizontalAlignment="Center" Height="135" Stroke="Black" VerticalAlignment="Center" Width="1280" Fill="Black" Opacity="0.7"/>
            <TextBlock x:Name="EndMessage" HorizontalAlignment="Center" Height="150" TextWrapping="Wrap" VerticalAlignment="Center" Text="Tie!" FontSize="100" FontWeight="Bold" Foreground="White"/>
        </Grid>
    </Grid>
</Window>
