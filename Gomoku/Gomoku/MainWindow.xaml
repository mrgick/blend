<Window x:Class="Gomoku.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Gomoku"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1280" ResizeMode="CanMinimize">
    <Window.Resources>
        <Style x:Key="FieldButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FDDD06"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="1"
                                BorderBrush="Black"
                                Margin="0">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyleCustom" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="Center" Margin="1,1,2,1" VerticalAlignment="Center">
                                <Grid x:Name="markGrid" Margin="5">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="30" MinHeight="30" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Image HorizontalAlignment="Left" Height="724" VerticalAlignment="Top" Width="1298" Source="/wall.jpg"/>
        <Rectangle HorizontalAlignment="Left" Height="660" Margin="10,0,0,0" Stroke="Black" VerticalAlignment="Center" Width="660" StrokeThickness="5"/>
        <Grid x:Name="fieldGrid" HorizontalAlignment="Left" Height="650" Margin="15,0,0,0" VerticalAlignment="Center" Width="650"/>
        <Rectangle HorizontalAlignment="Left" Height="660" Margin="680,0,0,0" Stroke="Black" VerticalAlignment="Center" Width="575" StrokeThickness="5"/>
        <TextBlock x:Name="text1" HorizontalAlignment="Left" Height="182" Margin="705,44,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="525" FontSize="120" FontWeight="Bold" FontStyle="Italic" Background="#FF191919" Foreground="White" Text=" Gomoku"/>
        <Button x:Name="Btn" HorizontalAlignment="Left" Height="125" VerticalAlignment="Top" Width="500" Click="NewGame" Background="{x:Null}" Margin="718,284,0,0" Foreground="Black" FontSize="90" FontStyle="Italic" BorderBrush="{x:Null}" Content="New Game" FontWeight="Bold">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontWeight" Value="Light" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF191919" TargetName="Border" />
                                        <Setter Property="TextElement.Foreground" Value="White" TargetName="contentPresenter"/>
                                        <Setter Property="TextElement.FontWeight" Value="Bold" TargetName="contentPresenter"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="text1_Copy" HorizontalAlignment="Left" Height="113" Margin="766,436,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="404" FontSize="80" FontWeight="Bold" FontStyle="Italic" Foreground="Black" Text=" Difficulty" TextDecorations="Underline"/>
        <RadioButton x:Name="RadioButton1" Style="{DynamicResource RadioButtonStyleCustom}" Content="1" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.752,0.409" Margin="745,554,0,0" FontSize="80" IsChecked="True" Click="RadioButton1_Checked"/>
        <RadioButton x:Name="RadioButton2" Style="{DynamicResource RadioButtonStyleCustom}" Content="2" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.469,0.455" Margin="916,554,0,0" FontSize="80" Click="RadioButton2_Checked"/>
        <RadioButton x:Name="RadioButton3" Style="{DynamicResource RadioButtonStyleCustom}" Content="3" HorizontalAlignment="Left" Height="110" VerticalAlignment="Top" Width="113" RenderTransformOrigin="0.5,0.5" Margin="1090,554,0,0" FontSize="80" Click="RadioButton3_Checked"/>
    </Grid>
</Window>
